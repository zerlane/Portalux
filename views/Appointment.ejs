<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Appointments</title>
    <style>
         
        nav {
            background-color:  rgb(230, 232, 233);
            text-align: left;
            padding: 1px;
            box-shadow:2px 2px 12px #a7a3a3;
            opacity:90%;
            
        }

        nav ul {
            list-style-type: none;
            margin: 0;
            padding: 0;
            overflow: hidden;
        }

        nav li {
            
            float:left;
            
        }

        nav a {
            text-decoration: none;
            color: #463f3f;
            font-size: 18px;
            display: block;
            font-family:sans-serif;
            font-weight: bold;
            padding: 15px;
            transition: background-color 0.3s;
            

        }

        nav a:hover {
            background-color: aliceblue;
        }
        
        .nav_link {
            background-color: aliceblue;
            color:#000000;
            
            
        }
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
        
        }

        header {
            background-color: rgb(109, 75, 106);
            color: white;
            text-align: left;
            padding: 10px;
            
        }

        main {
            max-width: 800px;
            margin: 20px auto;
            padding: 30px;
            border: 1px solid #fff;
            
            
        }
        .formCard {
            border-radius: 25px;
            padding: 50px 0px;
            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);

            text-align: center;
            font-size: larger;

            background-color: rgba(214, 210, 208, 0.39);
            
        
            margin: auto;
            margin-top: 4%;
            
            min-width: 50%;
            max-width: 80%;
            height: 100%;
        }

        form {
            margin-bottom: 20px;
            margin-left: 25px;
        }

        label,
        input,
        select {
            
            margin-bottom: 10px;
        }

        button {
            background-color: rgb(133, 1, 221);
            color: white;
            border: none;
            padding: 10px 20px;
            cursor: pointer;
        
        }
        ul {
            list-style: none;
            padding: 0;
        }

        section li {
            border: 1px solid #ccc;
            padding: 10px;
            margin-bottom: 10px;
            cursor: pointer;
        }

        li:hover {
            background-color: #f0f0f0;
        }
        button:hover {
            background-color: rgb(40, 8, 61);
            color: white;


        
            
        }

        .schedule-button,
        .reschedule-button,
        .cancel-button {
            display: none;
            background-color: #6f3371;
            color: white;
            border-radius: 3px;
            padding: 10px 20px;
            cursor: pointer;
        }

        .reschedule-button,
        .cancel-button {
            background-color: #6f3371;
            color: white;
            
            padding: 10px 20px;
            cursor: pointer;
            border-radius: 3px;
        }

        .action-buttons,
        .your-appointment-buttons {
            margin-top: 10px;
            border-radius: 3px;
        }

        .highlight {
            color: #ff0000;
            font-weight: bold;
        }
        footer {
            background-color: rgb(221, 233, 243);
            color: #463f3f;
            font-weight: bold;
            font-family:sans-serif;
            text-align: center;
            padding: 10px 0;
            box-shadow:2px 2px 12px #a7a3a3;
        }
        button {
            border-radius: 100px;
            font-size: medium;
            font-weight: bold;
            font-family: Arial, Helvetica, sans-serif;
            background-color: #8c67bd;
        }
        h2 {
            
            margin-bottom: 20px;
            font-size: 40px;
            font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;
            font-weight: lighter;
            
            color: #b054c1;
            opacity: .70;
            
        }
        h3 {
            font-family:Arial, Helvetica, sans-serif;
        }
    </style>
</head>

<body>
    
    <header>
        <img src = "../STATIC/whiteLogosmall.png"  alt = "wordLogo" >
        
    </header>
    <nav>
        <ul>
            <li><a href="/home" >Home</a></li>
            <li><a href="/appointments" class = "nav_link">Appointments</a></li>
            <li><a href="/medicalhistory" >Medical Records</a></li>
            <li><a href="/billing">Billing Process</a></li>
            <li><a href="/profile">Profile</a></li>
        </ul>
    </nav>
    <main>
        
        <div class = "formCard">
            <section id="appointment-form">
                <h2>Schedule An Appointment</h2>
                <form id="appointment-form">
                    <label for="date">Date:</label>
                    <input type="date" id="date" >
                    <br>
                    <label for="doctor">Doctor:</label>
                    <select id="doctor">
                        <option value="">Any Doctor</option>
                        <% doctors.forEach(doctor=> { %>
                            <option value="<%= doctor.first_name + " " + doctor.last_name %>">
                                <%= doctor.first_name + " " + doctor.last_name %>
                            </option>
                            <% }) %>
    
                    </select>
                    <br>
                    <br>
                    <button type="submit">Check Availability</button>
                </form>
            </section>
        </div>
        <section id="available-appointments">
            <h2>Available Appointments</h2>
            <ul id="available-appointments-list">
                
                
            </ul>
        </section>
        <section id="appointment-list">
            <h2>Your Appointments</h2>
            <ul id="appointments">
                
            </ul>
        </section>
    </main>
    <footer>
        <p>&copy; 2023 Patient Portal</p>
    </footer>

    <script>
        document.addEventListener('DOMContentLoaded', async function () {
            const appointmentForm = document.getElementById('appointment-form');
            const availableAppointmentsList = document.getElementById('available-appointments-list');
            const scheduledAppointmentsList = document.getElementById('appointments');


            appointmentForm.addEventListener('submit', function (event) {
                event.preventDefault();

                const dateInput = document.getElementById('date');
                const doctorInput = document.getElementById('doctor');

                const date = dateInput.value;
                const doctor = doctorInput.value;

                //fetch get requests for all available appointments, available doctor, or available date
                const getAvailability = async () => {
                    let data;

                    if (date && doctor) {
                        try {
                            const response = await fetch(`appointments/appointments.json?appointment_date=${date}&first_name=${doctor}`)
                            data = await response.json()
                        } catch (err) {
                            console.err(err)
                            throw err
                        }
                     } else if (doctor && doctor !== 'Any Doctor') {
                        try {
                            const response = await fetch(`appointments/appointments.json?first_name=${doctor}`)
                            data = await response.json()

                        } catch (err) {
                            console.error(err)
                            throw err
                        }
                    } else if (date) {
                        try {
                            const response = await fetch(`appointments/appointments.json?appointment_date=${date}`)
                            data = await response.json()
                        } catch (err) {
                            console.error(err)
                            throw err
                        }
                    } else {
                        try {
                            const response = await fetch(`appointments/appointments.json?`)
                            data = await response.json()

                        } catch (err) {
                            console.error(err)
                            throw err
                        }
                    }
                    displayAppointments(data, availableAppointmentsList)
                }

                //for some reason, this line is needed to display appointments, don't delete
                const requestedAppts = getAvailability().then(result => result)
            });


            function displayAppointments(appointments, listElement) {
                listElement.innerHTML = '';

                if (appointments.length === 0) {
                    listElement.innerHTML = '<li>No appointments available.</li>';
                } else {
                    appointments.forEach(appointment => {
                        const listItem = document.createElement('li');
                        const appointmentDate = new Date(appointment.appointment_date);
                        const appointmentDoctor = `${appointment.first_name} ${appointment.last_name}`;
                        const appointmentTime = appointment.appointment_time;
                        listItem.innerHTML = `Date: ${appointmentDate.toLocaleDateString()}, Time: ${appointmentTime}, Doctor: ${appointmentDoctor}, Specialty: ${appointment.specialty}&emsp;
                <button class="schedule-appointment">Schedule</button>`;

                        //fetch request by patch method to update Appointment database to Active once scheduled
                        const scheduleBtn = listItem.querySelector('.schedule-appointment');
                        scheduleBtn.addEventListener('click', function () {
                            fetch(`/appointments/schedule/${appointment.id}`, {
                                method: 'PATCH',
                                headers: {
                                    'Content-Type': 'application/json'
                                }
                            })
                                .then(response => response.json())
                            scheduleAppointment(appointment);
                        });

                        listElement.appendChild(listItem);
                    });
                }
            }

            function scheduleAppointment(appointment) {
                const appointmentDate = new Date(appointment.appointment_date);
                const appointmentDoctor = `${appointment.first_name} ${appointment.last_name}`;
                const appointmentTime = appointment.appointment_time;

                // This Check if the time slot is still available
                const scheduledTimes = Array.from(scheduledAppointmentsList.children).map(appointmentItem => {
                    return appointmentItem.querySelector('[data-type="time"]').innerText;
                });

                if (scheduledTimes.includes(appointment.appointment_time)) {
                    alert('This appointment time is no longer available. Please choose another time.');
                    return;
                }

                const appointmentItem = document.createElement('li');
                appointmentItem.innerHTML = `<strong data-type="doctor">Doctor:</strong> ${appointmentDoctor}, <strong data-type="date">Date:</strong> ${appointmentDate.toLocaleDateString()}, <strong data-type="time">Time:</strong> ${appointment.appointment_time}, 
                <strong>Specialty:</strong> ${appointment.specialty}<br><br>
        <button class="cancel-appointment">Cancel</button>
        <button class="reschedule-appointment">Reschedule</button>
        <button class="view-appointment">View</button>`;

                appointmentItem.style.border = '1px solid #ccc';
                appointmentItem.style.padding = '10px';
                appointmentItem.style.marginBottom = '10px';

                scheduledAppointmentsList.appendChild(appointmentItem);

                const cancelBtn = appointmentItem.querySelector('.cancel-appointment');
                cancelBtn.addEventListener('click', function () {
                    const confirmation = confirm('Please confirm to cancel the appointment');
                    if (confirmation) {
                        fetch(`/appointments/cancel/${appointment.id}`, {
                            method: 'PATCH',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                            .then(response => response.json())
                        removeAppointment(appointmentItem);
                        alert('Appointment canceled');
                    }
                });

                const viewBtn = appointmentItem.querySelector('.view-appointment');
                viewBtn.addEventListener('click', function () {
                    alert(`Viewing appointment details:\nDate: ${appointmentDate.toLocaleDateString()}\nTime: ${appointmentTime}\nDoctor: ${appointmentDoctor}`);
                });

                const rescheduleBtn = appointmentItem.querySelector('.reschedule-appointment');
                rescheduleBtn.addEventListener('click', async function () {

                    //the reschedule button assumes that the patient wants to schedule with the same doctor
                    fetch(`/appointments/cancel/${appointment.id}`, {
                            method: 'PATCH',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                            .then(response => response.json())
                        removeAppointment(appointmentItem);
                        let data;
                        try {
                            const response = await fetch(`/appointments.json?first_name=${appointmentDoctor}`)
                            data = await response.json()

                        } catch (err) {
                            console.error(err)
                            throw err
                        }
                    displayAppointments(data, availableAppointmentsList)    
                });


                availableAppointmentsList.innerHTML = '';
            }



            function updateScheduledAppointmentDetails(appointmentItem, newAppointment) {
                const { date, time, doctor } = newAppointment;

                appointmentItem.innerHTML = `<strong>Doctor:</strong> ${doctor}, <strong>Date:</strong> ${date}, <strong>Time:</strong> ${time}
    <button class="cancel-appointment">Cancel</button>
    <button class="reschedule-appointment">Reschedule</button>
    <button class="view-appointment">View</button>`;
            }

            function removeAppointment(appointmentItem) {
                scheduledAppointmentsList.removeChild(appointmentItem);
            }


        });

    </script>

</body>

</html>
